{"version":3,"sources":["components/List.js","components/Details.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["List","list","onClickHandler","listView","map","i","className","onClick","id","name","length","defaulProps","Details","info","useState","loading","setLoading","profile","setProfile","useEffect","fetch","then","response","json","data","src","avatar","alt","details","city","company","position","Dashboard","setList","setInfo","isEmptyInfo","setIsEmptyInfo","filter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAGA,SAASA,EAAT,GAAyC,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,eACdC,EAAWF,EAAKG,KAAI,SAACC,GACzB,OACE,oBAAIC,UAAU,aAAd,SACE,wBAAQA,UAAU,YAAYC,QAAS,kBAAML,EAAeG,EAAEG,KAA9D,SACGH,EAAEI,QAFyBJ,EAAEG,OAQtC,OAAwB,IAApBL,EAASO,OAAqB,KAE3B,oBAAIJ,UAAU,OAAd,SAAsBH,IAG/BH,EAAKW,YAAc,CACjBV,KAAM,IAQOD,QCzBf,SAASY,EAAT,GAA4B,IAATC,EAAQ,EAARA,KACjB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAgBA,OAJAC,qBAAU,WAViB,IAACX,IAWPK,EAAKL,GAVxBQ,GAAW,GACXI,MAAM,uGAAD,OAAwGZ,EAAxG,UACFa,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLN,EAAWM,GACXR,GAAW,QAMd,CAACH,EAAKL,KAEFO,EACL,iFAEA,sBAAKT,UAAU,OAAf,UACE,qBAAKmB,IAAKR,EAAQS,OAAQC,IAAI,GAAGrB,UAAU,iBAC3C,oBAAIA,UAAU,aAAd,SAA4BW,EAAQR,OACpC,oBAAGH,UAAU,aAAb,mBACQ,sBAAMA,UAAU,aAAhB,SAA8BW,EAAQW,QAAQC,UAEtD,oBAAGvB,UAAU,aAAb,sBACW,sBAAMA,UAAU,gBAAhB,SAAiCW,EAAQW,QAAQE,aAE5D,oBAAGxB,UAAU,aAAb,uBACY,sBAAMA,UAAU,iBAAhB,SAAkCW,EAAQW,QAAQG,iBAMpEnB,EAAQD,YAAc,CACpBE,KAAM,CACJL,GAAI,EACJC,KAAM,KAQKG,QCnBAoB,MA5Bf,WACE,MAAwBlB,mBAAS,IAAjC,mBAAOb,EAAP,KAAagC,EAAb,KACA,EAAwBnB,mBAAS,IAAjC,mBAAOD,EAAP,KAAaqB,EAAb,KACA,EAAsCpB,oBAAS,GAA/C,mBAAOqB,EAAP,KAAoBC,EAApB,KAiBA,OATAjB,qBAAU,WALRC,MAAM,mHACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUS,EAAQT,QAKzB,IAQD,sBAAKlB,UAAU,YAAf,UACE,cAAC,EAAD,CAAML,KAAMA,EAAMC,eAPC,SAACM,GACtB0B,EAAQjC,EAAKoC,QAAO,SAAChC,GAAD,OAAOA,EAAEG,KAAOA,KAAI,IACxC4B,GAAe,MAMZD,EAAc,KAAO,cAAC,EAAD,CAAStB,KAAMA,QChB5ByB,MARf,WACE,OACE,qBAAKhC,UAAU,YAAf,SACE,cAAC,EAAD,OCMSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.93ddfd30.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction List({ list, onClickHandler }) {\n  const listView = list.map((i) => {\n    return (\n      <li className=\"list__item\" key={i.id}>\n        <button className=\"list__btn\" onClick={() => onClickHandler(i.id)}>\n          {i.name}\n        </button>\n      </li>\n    );\n  });\n\n  if (listView.length === 0) return null;\n\n  return <ul className=\"list\">{listView}</ul>;\n}\n\nList.defaulProps = {\n  list: [],\n};\n\nList.propTypes = {\n  list: PropTypes.array,\n  onClickHandler: PropTypes.func,\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Details({ info }) {\n  const [loading, setLoading] = useState(true);\n  const [profile, setProfile] = useState({});\n\n  const loadDetailsHandler = (id) => {\n    setLoading(true);\n    fetch(`https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/${id}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        setProfile(data);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    loadDetailsHandler(info.id);\n  }, [info.id]);\n\n  return loading ? (\n    <p>Загрузка</p>\n  ) : (\n    <div className=\"card\">\n      <img src={profile.avatar} alt=\"\" className=\"card__avatar\" />\n      <h3 className=\"card__name\">{profile.name}</h3>\n      <p className=\"card__text\">\n        City: <span className=\"card__city\">{profile.details.city}</span>\n      </p>\n      <p className=\"card__text\">\n        Company: <span className=\"card__company\">{profile.details.company}</span>\n      </p>\n      <p className=\"card__text\">\n        Position: <span className=\"card__position\">{profile.details.position}</span>\n      </p>\n    </div>\n  );\n}\n\nDetails.defaulProps = {\n  info: {\n    id: 0,\n    name: \"\",\n  },\n};\n\nDetails.propTypes = {\n  info: PropTypes.object,\n};\n\nexport default Details;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Details from \"./Details\";\n\nfunction Dashboard() {\n  const [list, setList] = useState([]);\n  const [info, setInfo] = useState({});\n  const [isEmptyInfo, setIsEmptyInfo] = useState(true);\n\n  const loadListHandler = () => {\n    fetch(\"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/users.json \")\n      .then((response) => response.json())\n      .then((data) => setList(data));\n  };\n\n  useEffect(() => {\n    loadListHandler();\n  }, []);\n\n  const onClickHandler = (id) => {\n    setInfo(list.filter((i) => i.id === id)[0]);\n    setIsEmptyInfo(false);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <List list={list} onClickHandler={onClickHandler} />\n      {isEmptyInfo ? null : <Details info={info} />}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}